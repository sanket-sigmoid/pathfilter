version: 2.1
setup: true
orbs:
  path-filtering: circleci/path-filtering@0.1.1
  continuation: circleci/continuation@0.2.0
  
parameters:
  manual-workflow-a:
    type: boolean
    default: false 
  manual-workflow-b:
    type: boolean
    default: false
  manual-workflow-c:
    type: boolean
    default: false
  manual-workflow-d:
    type: boolean
    default: false
  run-workflow-a:
    type: boolean
    default: false
  run-workflow-b:
    type: boolean
    default: false
  run-workflow-c:
    type: boolean
    default: false
  run-workflow-d:
    type: boolean
    default: false
commands:
    set-parameters:
        description: |
            Generates a set of pipeline parameters from `mapping` at `output-path`.
        parameters:
            base-revision:
                default: main
                description: |
                    The revision to compare the current one against for the purpose of determining changed files.
                type: string
            mapping:
                default: ""
                description: |
                    Mapping of path regular expressions to pipeline parameters and values. One mapping per line, whitespace-delimited.
                type: string
            output-path:
                default: /tmp/pipeline-parameters.json
                description: |
                    Path to save the generated parameters to.
                type: string
  steps:
    - run:
        command: |+
          #!/usr/bin/env bash
          echo "hello"
        environment:
          BASE_REVISION: << parameters.base-revision >>
          MAPPING: << parameters.mapping >>
          OUTPUT_PATH: << parameters.output-path >>
        name: Set parameters
        shell: /usr/bin/env bash
  
workflows:
  setup:
    unless:
      or: [<< pipeline.parameters.manual-workflow-a >>, << pipeline.parameters.manual-workflow-a >>, <<pipeline.parameters.manual-workflow-c>>,  <<pipeline.parameters.manual-workflow-d>>]
    jobs:
      - path-filtering/filter:
          base-revision: << pipeline.git.branch >>
          config-path:  .circleci/continue_config.yml
          mapping: |
            dir_a/.* run-workflow-a true
            dir_b/.* run-workflow-b true
            dir_c/.* run-workflow-c true
            dir_d/.* run-workflow-d true
  setup-a:
    when: 
      or: [<< pipeline.parameters.run-workflow-a >>]
    jobs:
      - continuation/continue:
          configuration_path: dir_a/.circleci/workflows.yml
          parameters: /tmp/pipeline-parameters.json
          pre-steps:
            - run:
                command: |
                  echo '{ "run-workflow-a": << pipeline.parameters.manual-workflow-a >> }' >> /tmp/pipeline-parameters.json
  setup-b:
    when: 
      or: [<< pipeline.parameters.run-workflow-b >> ]
    jobs:
      - continuation/continue:
          configuration_path: dir_b/.circleci/workflows.yml
          parameters: /tmp/pipeline-parameters.json
          pre-steps:
            - run:
                command: |
                  echo '{ "run-workflow-b": << pipeline.parameters.manual-workflow-b >> }' >> /tmp/pipeline-parameters.json
  setup-c:
    when: 
      or: [<< pipeline.parameters.run-workflow-c >>]
    jobs:
      - continuation/continue:
          configuration_path: dir_c/.circleci/workflows.yml
          parameters: /tmp/pipeline-parameters.json
          pre-steps:
            - run:
                command: |
                  echo '{ "run-workflow-c": << pipeline.parameters.manual-workflow-c >>}' >> /tmp/pipeline-parameters.json
  setup-d:
    when: 
      or: [<<pipeline.parameters.run-workflow-d>>]
    jobs:
      - continuation/continue:
          configuration_path: dir_d/workflows.yml
          parameters: /tmp/pipeline-parameters.json
          pre-steps:
            - run:
                command: |
                  echo '{ "run-workflow-d": << pipeline.parameters.manual-workflow-d >> }' >> /tmp/pipeline-parameters.json
